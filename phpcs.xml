<?xml version="1.0"?>
<ruleset name="Plugin">
	<description>Rules for the Plugin</description>

	<file>./</file>
	<!-- Exclude paths -->
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*/tests/*</exclude-pattern>
	<exclude-pattern>*/languages/*</exclude-pattern>
	<exclude-pattern>*/build/*</exclude-pattern>
	<exclude-pattern>*/bin/*</exclude-pattern>
	<exclude-pattern>*/src/*</exclude-pattern>
	<exclude-pattern>*/\.*</exclude-pattern>

	<!-- Show progress, show the error codes for each message (source). -->
	<arg value="ps"/>

	<!-- Strip the filepaths in reports down to the relevant bit. -->
	<arg name="basepath" value="./"/>

	<!-- Only scan PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Set the memory limit to 256M.
		 For most standard PHP configurations, this means the memory limit will temporarily be raised.
		 Ref: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Advanced-Usage#specifying-phpini-settings
	-->
	<ini name="memory_limit" value="256M"/>

	<arg name="colors"/>

	<!-- Check up to 20 files simultaneously. -->
	<arg name="parallel" value="20"/>

	<!-- Configs -->
	<config name="minimum_supported_wp_version" value="6.1"/>
	<config name="testVersion" value="7.4-"/>
	<!-- Check for PHP cross-version compatibility. -->
	<rule ref="PHPCompatibilityWP"/>

	<!-- Rules -->

	<!--
	To get the optimal benefits of using WPCS, we should add a couple of
	custom properties. Adjust the values of these properties to fit our needs.
	For information on additional custom properties available, check out
	the wiki:
	https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties
	-->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" value="storepress-base-plugin"/>
		</properties>
	</rule>

	<!-- Include the WordPress-Extra standard. -->
	<rule ref="WordPress-Extra">
		<exclude name="WordPress.Files.FileName"/>
	</rule>

	<!-- Let's also check that everything is properly documented. -->
	<rule ref="WordPress-Docs"/>

	<!-- Add in some extra rules from other standards. -->
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.Commenting.Todo"/>

	<!--
	Prevent errors caused by WordPress Coding Standards not supporting PHP 8.0+.
	See https://github.com/WordPress/WordPress-Coding-Standards/issues/2035
	-->
	<ini name="error_reporting" value="E_ALL &#38; ~E_DEPRECATED"/>


</ruleset>
